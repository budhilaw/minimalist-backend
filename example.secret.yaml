# Portfolio Backend Secrets Template
# ‚ö†Ô∏è  IMPORTANT: Copy this file to .secret.yaml and fill in your actual values
# ‚ö†Ô∏è  NEVER commit .secret.yaml to version control
# ‚ö†Ô∏è  Add .secret.yaml to your .gitignore file

database:
  # PostgreSQL connection URL
  # Format: postgresql://username:password@host:port/database_name
  # Example: postgresql://portfolio_user:secret123@localhost:5432/portfolio_db
  url: "postgresql://username:password@localhost:5432/portfolio_db"

redis:
  # Redis connection URL
  # Format: redis://[username:password@]host:port[/database]
  # Example: redis://localhost:6379 or redis://user:pass@localhost:6379/0
  url: "redis://localhost:6379"

auth:
  # JWT secret for signing tokens (minimum 256 bits / 32 characters)
  # Generate with: openssl rand -base64 32
  jwt_secret: "CHANGE-ME-super-secret-jwt-key-min-256-bits-production"
  
  # Refresh token secret (different from JWT secret)
  # Generate with: openssl rand -base64 32  
  refresh_secret: "CHANGE-ME-super-secret-refresh-key-min-256-bits-production"

encryption:
  # 32-character encryption key for sensitive data
  # Generate with: openssl rand -base64 24
  key: "CHANGE-ME-32-char-encryption-key"

email:
  # SMTP configuration for sending emails
  smtp_host: "smtp.gmail.com"              # SMTP server host
  smtp_port: 587                           # SMTP server port (587 for TLS)
  smtp_username: "your-email@gmail.com"    # SMTP username
  smtp_password: "your-app-password"       # SMTP password (use App Password for Gmail)
  from_email: "noreply@yourdomain.com"     # From email address
  from_name: "Portfolio Backend"           # From name

external_apis:
  # GitHub Personal Access Token for fetching repository data
  # Generate at: https://github.com/settings/tokens
  # Permissions needed: public_repo (or repo for private repos)
  github_token: "ghp_your-github-personal-access-token-here"
  
  # OpenAI API key if using AI features
  # Get from: https://platform.openai.com/api-keys
  openai_api_key: "sk-your-openai-api-key-if-needed"

monitoring:
  # Sentry DSN for error tracking and monitoring
  # Get from: https://sentry.io/ after creating a project
  sentry_dsn: "https://your-sentry-dsn-for-error-tracking@sentry.io/project-id"
  
storage:
  # AWS S3 credentials for file storage
  # Create IAM user with S3 permissions: https://console.aws.amazon.com/iam/
  aws_access_key_id: "AKIA_YOUR_AWS_ACCESS_KEY_ID"
  aws_secret_access_key: "your-aws-secret-access-key-here"
  aws_region: "us-east-1"                  # AWS region for S3 bucket
  s3_bucket: "your-s3-bucket-name"         # S3 bucket name for file uploads

# üîß Setup Instructions:
# 1. Copy this file: cp example.secret.yaml .secret.yaml
# 2. Replace all placeholder values with your actual credentials
# 3. Ensure .secret.yaml is in your .gitignore file
# 4. Set appropriate file permissions: chmod 600 .secret.yaml
#
# üõ°Ô∏è  Security Notes:
# - Use strong, unique secrets for production
# - Rotate secrets regularly
# - Use environment-specific secrets
# - Consider using a secrets management service for production 