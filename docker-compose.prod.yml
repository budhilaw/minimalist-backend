services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: minimalist_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-personal-website}
      POSTGRES_USER: ${POSTGRES_USER:-kai}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - portfolio-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-kai} -d ${POSTGRES_DB:-personal-website}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: minimalist_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - portfolio-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  api:
    image: ghcr.io/budhilaw/minimalist-backend:latest
    container_name: portfolio-backend
    restart: unless-stopped
    environment:
      - RUST_LOG=${RUST_LOG:-info}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-kai}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-personal-website}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
    volumes:
      - ./.secret.yaml:/app/.secret.yaml:ro
    expose:
      - "8000"
    networks:
      - portfolio-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/v1/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  portfolio-network:
    external: true 